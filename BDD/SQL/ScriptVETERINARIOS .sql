DROP TABLE FACTURAS CASCADE CONSTRAINTS;
DROP TABLE TRATAMIENTOS CASCADE CONSTRAINTS;
DROP TABLE HISTORIAL_CLINICO CASCADE CONSTRAINTS;
DROP TABLE CITAS CASCADE CONSTRAINTS;
DROP TABLE MASCOTAS CASCADE CONSTRAINTS;
DROP TABLE CLIENTES CASCADE CONSTRAINTS;
DROP TABLE VETERINARIOS CASCADE CONSTRAINTS;
DROP TABLE CCC CASCADE CONSTRAINTS;
DROP TABLE CONSULTAS CASCADE CONSTRAINTS;
CREATE TABLE CONSULTAS(
	CODIGO	CHAR(1) NOT NULL,
	NOMBRE	VARCHAR2(9) NOT NULL,
	CONSTRAINT PK_CONSULTAS PRIMARY KEY(CODIGO),
	CONSTRAINT CK_CONSULTAS_SALAS CHECK(CODIGO BETWEEN 1 AND 8)
);
CREATE TABLE CCC(
		ID				CHAR(999) NOT NULL,
		IBAN			CHAR(24) NOT NULL,
		CODBANCO		NUMBER(4) NOT NULL,
		CODSUCURSAL		NUMBER(4) NOT NULL,
		DC				CHAR(4) NOT NULL,
		NUMCUENTA		CHAR(10) NOT NULL,
		CONSTRAINT PK_CCC PRIMARY KEY(ID)
);
CREATE TABLE VETERINARIOS(
	COLEGIADO			CHAR(9) NOT NULL,	
	NOMBRE				VARCHAR2(15) NOT NULL,
	APELLIDO			VARCHAR2(30) NOT NULL,
	ESPECIALIDAD		VARCHAR2(16) NOT NULL,
	TELEFONO			CHAR(9) NOT NULL,
	CONSTRAINT PK_VETERINARIOS PRIMARY KEY(COLEGIADO),
	CONSTRAINT CK_VETERINARIOS_ESPEC CHECK(UPPER(ESPECIALIDAD) IN('CIRUGIA','MEDICINA GENERAL','ANALISIS CLINICO')),
	CONSTRAINT CK_VETERINARIOS_NOM CHECK(NOMBRE LIKE UPPER(NOMBRE))
);
CREATE TABLE CLIENTES(
	NIF				CHAR(9) NOT NULL,
	NOMBRE			VARCHAR2(20) NOT NULL,
	APELLIDOS		VARCHAR2(30) NOT NULL,
	DIRECCION		VARCHAR2(40) NOT NULL,
	TELEFONO		CHAR(9) NOT NULL,
	FECHAALTA		DATE NOT NULL,
	NUMMASCOTAS		NUMBER(2) NOT NULL,
	IDCUENTA		CHAR(999) NOT NULL,
	CONSTRAINT PK_CLIENTES PRIMARY KEY(NIF),
	CONSTRAINT FK_CLIENTES_CCC FOREIGN KEY(IDCUENTA)
		REFERENCES CCC,
	CONSTRAINT CK_CLIENTES_NUMMAS CHECK(NUMMASCOTAS BETWEEN 0 AND 10),
	CONSTRAINT CK_CLIENTES_FECH CHECK(TO_CHAR(FECHAALTA,'dd/mm/yy')>'01/03/15' )
	);
CREATE TABLE MASCOTAS(
	COD			CHAR(3) NOT NULL,
	NOMBRE		VARCHAR2(15) NOT NULL,
	ESPECIE		VARCHAR2(5) NOT NULL,
	RAZA		VARCHAR2(20) NOT NULL,
	FECHA_NAC	DATE NOT NULL,
	SEXO		CHAR(1) NOT NULL,
	CLIENTE		CHAR(9) NOT NULL,
	CONSTRAINT PK_MASCOTAS PRIMARY KEY(COD),
	CONSTRAINT FK_MASCOTAS_CLIENTE FOREIGN KEY(CLIENTE)
		REFERENCES CLIENTES,
	CONSTRAINT CK_MASCOTAS_NOMB CHECK(NOMBRE LIKE UPPER(NOMBRE)),
	CONSTRAINT CK_MASCOTAS_RAZA CHECK(RAZA LIKE UPPER(RAZA)),
	CONSTRAINT CK_MASCOTAS_ESPEC CHECK(UPPER(ESPECIE) IN('PERRO','GATO','RATON','PEZ')),
	CONSTRAINT CK_MASCOTAS_SEX CHECK(UPPER(SEXO) IN('M','H'))
);
CREATE TABLE CITAS(
	COD			  CHAR(5) NOT NULL,
	FECHA		  DATE NOT NULL,
	MASCOTA		  CHAR(3) NOT NULL,
	VETERINARIO	  CHAR(9) NOT NULL,
	FECHACONFIRMA DATE NOT NULL,
	CONSULTA	  CHAR(1) NOT NULL,
	CONSTRAINT PK_CITAS PRIMARY KEY(COD),
	CONSTRAINT FK_CITAS_MASCOTA FOREIGN KEY(MASCOTA)
		REFERENCES MASCOTAS,
	CONSTRAINT FK_CITAS_CONSULTA FOREIGN KEY(CONSULTA)
		REFERENCES CONSULTAS
);
CREATE TABLE HISTORIAL_CLINICO(
	COD				CHAR(2) NOT NULL,
	FECHA			DATE NOT NULL,
	DESCRIPCION		VARCHAR2(25) UNIQUE NOT NULL,
	MASCOTA			CHAR(3) NOT NULL,
	NUMCOLEGIADO	CHAR(9) NOT NULL,
	CONSTRAINT PK_HISTORIAL_CLINICO PRIMARY KEY(COD),
	CONSTRAINT FK_HISTORIALCLIN_MASCOTA FOREIGN KEY(MASCOTA)
		REFERENCES MASCOTAS,
	CONSTRAINT FK_HISTORIALCLIN_NUMCOL FOREIGN KEY(NUMCOLEGIADO)
		REFERENCES VETERINARIOS,
	CONSTRAINT CK_HISTORIALCLIN_FECH CHECK(FECHA LIKE TO_CHAR('dd/mm/yy'))
);
CREATE TABLE TRATAMIENTOS(
	COD				CHAR(7) NOT NULL,
	NOMBRE			VARCHAR2(20) NOT NULL,
	DESCRIPCION		VARCHAR2(60) NOT NULL,
	MASCOTA			CHAR(3) NOT NULL,
	VETERINARIO		CHAR(9) NOT NULL,	
	FECHA_INI		DATE NOT NULL,
	FECHA_FIN		DATE NOT NULL,
	DOSIS			  CHAR(3) NOT NULL,
	CONSTRAINT PK_TRATAMIENTOS PRIMARY KEY(COD),
	CONSTRAINT FK_TRATAMIENTOS_MASCOTA FOREIGN KEY(MASCOTA)
		REFERENCES MASCOTAS,
	CONSTRAINT FK_TRATAMIENTOS_VET FOREIGN KEY(VETERINARIO)
		REFERENCES VETERINARIOS
);
CREATE TABLE FACTURAS(
	NUMERO		NUMBER(7) NOT NULL,
	FECHA		DATE NOT NULL,
	CLIENTE		CHAR(9) NOT NULL,
	DESCUENTO	NUMBER(3) NOT NULL,
	IMPORTE		NUMBER(7,2) NOT NULL,
	CONSTRAINT PK_FACTURAS PRIMARY KEY(NUMERO),
	CONSTRAINT FK_FACTURAS_CLIENTES FOREIGN KEY(CLIENTE)
		REFERENCES CLIENTES,
	CONSTRAINT CK_FACTURAS_IMPORTE CHECK(IMPORTE >0),
	CONSTRAINT CK_FACTURAS_DESCU CHECK(DESCUENTO BETWEEN 0 AND 100)
	);